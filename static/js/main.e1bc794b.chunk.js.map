{"version":3,"sources":["components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","utils/searchHelper.ts","components/SearchLink/SearchLink.tsx","components/SortLink/SortLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeopleFilters/PeopleFilters.tsx","components/PeoplePage/PeoplePage.tsx","components/Navbar/Navbar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","NotFoundPage","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","Personlink","person","slug","useParams","to","cn","sex","name","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","search","SortLink","sortBy","isReversed","get","sortField","order","sort","PeopleTable","people","getPersonByName","find","pers","getPersonParent","map","born","died","motherName","fatherName","PeopleFilters","setSearchParams","centuriesParams","getAll","type","placeholder","onChange","e","query","target","century","includes","centuries","filter","cent","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","preparedPeople","length","Math","ceil","getCentury","lowerQuery","toLocaleLowerCase","join","person1","person2","localeCompare","reverse","useEffect","getPeople","catch","finally","Navbar","role","isActive","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.e1bc794b.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link, useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const Personlink: React.FC<Props> = ({ person }) => {\n  const { slug } = useParams();\n\n  return (\n    <Link\n      to={slug ? `../${person.slug}` : person.slug}\n      className={cn({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../../utils/searchHelper';\n\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\nexport const SearchLink: React.FC<Props> = ({\n  children,\n  params,\n  ...props\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props}\n    >\n      {children}\n    </Link>\n  );\n};\n","import React from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { SearchLink } from '../SearchLink';\n\ntype Props = {\n  sortBy: string;\n};\n\nexport const SortLink: React.FC<Props> = ({ sortBy }) => {\n  const [searchParams] = useSearchParams();\n  const isReversed = searchParams.get('order') === 'desc';\n  const sortField = searchParams.get('sort') || '';\n\n  const params = {\n    order: (sortBy === sortField && !isReversed) ? 'desc' : null,\n    sort: (sortBy === sortField && isReversed) ? null : sortBy,\n  };\n\n  return (\n    <SearchLink params={params}>\n      <span className=\"icon\">\n        <i\n          className={cn(\n            'fas',\n            {\n              'fa-sort': sortField !== sortBy,\n              'fa-sort-up': sortField === sortBy && !isReversed,\n              'fa-sort-down': sortField === sortBy && isReversed,\n            },\n          )}\n        />\n      </span>\n    </SearchLink>\n  );\n};\n","import cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { Personlink } from '../PersonLink';\nimport { SortLink } from '../SortLink';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  const getPersonByName = (name: string) => {\n    return people.find(pers => pers.name === name);\n  };\n\n  const getPersonParent = (name: string | null): JSX.Element => {\n    return (name ? (\n      <>\n        {getPersonByName(name)\n          ? (\n            <Personlink\n              person={getPersonByName(name) as Person}\n            />\n          )\n          : (\n            <>\n              {name}\n            </>\n          )}\n      </>\n    )\n      : (\n        <>\n          -\n        </>\n      ));\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <SortLink sortBy=\"name\" />\n            </span>\n          </th>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <SortLink sortBy=\"sex\" />\n            </span>\n          </th>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <SortLink sortBy=\"born\" />\n            </span>\n          </th>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <SortLink sortBy=\"died\" />\n            </span>\n\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            key={person.slug}\n            data-cy=\"person\"\n            className={cn({\n              'has-background-warning': person.slug === slug,\n            })}\n          >\n            <td>\n              <Personlink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {getPersonParent(person.motherName)}\n            </td>\n            <td>\n              {getPersonParent(person.fatherName)}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { SearchLink } from '../SearchLink';\nimport { getSearchWith } from '../../utils/searchHelper';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const sex = searchParams.get('sex');\n  const centuriesParams = searchParams.getAll('centuries');\n  const centuries = ['16', '17', '18', '19', '20'];\n\n  const queryChangeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchParams(\n      getSearchWith(searchParams, {\n        query: e.target.value || null,\n      }),\n    );\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={cn({ 'is-active': !sex })}\n          params={{ sex: null }}\n        >\n          All\n        </SearchLink>\n        <SearchLink\n          className={cn({ 'is-active': sex === 'm' })}\n          params={{ sex: 'm' }}\n        >\n          Male\n        </SearchLink>\n        <SearchLink\n          className={cn({ 'is-active': sex === 'f' })}\n          params={{ sex: 'f' }}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            onChange={queryChangeHandler}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {centuries.map(century => (\n              <SearchLink\n                data-cy=\"century\"\n                className={cn(\n                  'button mr-1',\n                  {\n                    'is-info': centuriesParams.includes(century),\n                  },\n                )}\n                params={{\n                  centuries: centuriesParams.includes(century)\n                    ? centuriesParams.filter(cent => cent !== century)\n                    : [...centuriesParams, century],\n                }}\n              >\n                {century}\n              </SearchLink>\n            ))}\n\n            <div className=\"level-right ml-4\">\n              <SearchLink\n                data-cy=\"centuryALL\"\n                className=\"button is-success is-outlined\"\n                params={{ centuries: null }}\n              >\n                All\n              </SearchLink>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{ sex: null, query: null, centuries: null }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\nimport { PeopleFilters } from '../PeopleFilters/PeopleFilters';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [searchParams] = useSearchParams();\n\n  const sex = searchParams.get('sex');\n  const query = searchParams.get('query');\n  const centuries = searchParams.getAll('centuries');\n  const sortField = searchParams.get('sort');\n  const order = searchParams.get('order');\n\n  let preparedPeople = [...people];\n\n  if (sex) {\n    preparedPeople = preparedPeople.filter(person => person.sex === sex);\n  }\n\n  if (centuries.length > 0) {\n    const getCentury = (person: Person) => Math.ceil(person.born / 100);\n\n    preparedPeople = preparedPeople.filter(\n      person => centuries.includes(\n        getCentury(person).toString(),\n      ),\n    );\n  }\n\n  if (query) {\n    const lowerQuery = query.toLocaleLowerCase();\n\n    preparedPeople = preparedPeople.filter(person => {\n      return [\n        person.name,\n        person.motherName || '',\n        person.fatherName || '',\n      ]\n        .join('\\n')\n        .toLocaleLowerCase()\n        .includes(lowerQuery);\n    });\n  }\n\n  if (sortField) {\n    preparedPeople.sort((person1, person2) => {\n      switch (sortField) {\n        case 'name':\n        case 'sex':\n          return person1[sortField].localeCompare(person2[sortField]);\n\n        case 'born':\n        case 'died':\n          return person1[sortField] - person2[sortField];\n\n        default:\n          return 0;\n      }\n    });\n\n    if (order === 'desc') {\n      preparedPeople.reverse();\n    }\n  }\n\n  const loadPeopleTable = (): JSX.Element => {\n    return (\n      <>\n        {isError\n          ? (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )\n          : (\n            <>\n              {people.length > 0\n                ? (\n                  <PeopleTable people={preparedPeople} />\n                )\n                : (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )}\n            </>\n          )}\n      </>\n    );\n  };\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            <PeopleFilters />\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                loadPeopleTable()\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => cn('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n          >\n            Home\n          </NavLink>\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => cn('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n            <Route path=\"people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug?\" element={<PeoplePage />} />\n            </Route>\n\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}